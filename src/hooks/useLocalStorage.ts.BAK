import { Dispatch, SetStateAction, useEffect, useState } from "react"
import { FormDataItem, StorableObj } from "../models/form"


const getStorageItem = (key: string): { [k: string]: FormDataItem } | null => {
  if (typeof window !== 'undefined') {
    const savedItem = localStorage.getItem(key)

    return savedItem !== null ? JSON.parse(savedItem) : null;

  }
  return null;
}

const useLocalStorage = (apiSection: string, defaultVal: null) => {


  const [storageVal, setStorageVal] = useState<StorableObj[] | null>(() => {

    const stored = getStorageItem(apiSection)

    
    
    if (defaultVal === null && stored) {

      const transformed = Object.keys(stored).map(apikey => {
        return {
          apikey: apikey,
          val: stored[apikey]
        }
      })
      return transformed;
    } else {
      return [{}] as StorableObj[]
    }
  })

  // useEffect(() => {
  //   if (storageVal !== undefined) {
  //     localStorage.setItem(apiSection, JSON.stringify(storageVal))
  //   }
  // }, [JSON.stringify(storageVal), apiSection])

  return  useState(null)
}

export default useLocalStorage;